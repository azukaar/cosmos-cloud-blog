{
    "version": "https://jsonfeed.org/version/1",
    "title": "Cosmos-Cloud",
    "description": "",
    "home_page_url": "file:///C:\Users\azuka\Documents\Publii\sites\cosmos-cloud\preview",
    "feed_url": "file:///C:\Users\azuka\Documents\Publii\sites\cosmos-cloud\preview/feed.json",
    "user_comment": "",
    "icon": "file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/website/cosmos_simple_white.png",
    "author": {
        "name": "Yann Stepienik"
    },
    "items": [
        {
            "id": "file:///C:\Users\azuka\Documents\Publii\sites\cosmos-cloud\preview/getting-started-with-cosmos-cloud-a-beginners-guide-to-self-hosting.html",
            "url": "file:///C:\Users\azuka\Documents\Publii\sites\cosmos-cloud\preview/getting-started-with-cosmos-cloud-a-beginners-guide-to-self-hosting.html",
            "title": "Getting Started with Cosmos Cloud: A Beginner&#x27;s Guide to Self-Hosting",
            "summary": "If you're new to the world of self-hosting and Docker, setting up your own server might seem like a difficult task, and well... You are right! It is very difficult. But do not go yet! Cosmos has been designed to make the journey a bit&hellip;",
            "content_html": "<p>If you're new to the world of self-hosting and Docker, setting up your own server might seem like a difficult task, and well... You are right! It is very difficult. But do not go yet! Cosmos has been designed to make the journey a bit easier, but most importantly, must safer for you to take!</p>\n<p>In this guide, I'll introduce you to Cosmos Cloud, a user-friendly platform that simplifies the process of managing your home server. By the end of this article, you'll have a basic understanding of how to set up and use Cosmos Cloud for your self-hosting needs.</p>\n<h2>What is Docker?</h2>\n<p>Docker is a platform that allows you to run applications in containers. Containers are isolated environments that contain everything the application needs to run, including the code, runtime, system tools, and libraries. This means that the application will run the same way regardless of the environment it's in, eliminating the \"it works on my machine\" problem. Docker is essential for running Cosmos Cloud.</p>\n<h2>Step 0: Your server</h2>\n<p>This guides kinda assume you already have a running server. If you don't, here's the general guideline: the best for is to use a Linux based server with a common distro such as Debian or Ubuntu. If you use Raspbian, make sure you are using the 64bits version.</p>\n<p>Finally, make sure you keep that OS up to date, for your own security!</p>\n<h2>Step 1: Installing Docker</h2>\n<p>Before you can use Cosmos Cloud, you'll need to install Docker. To install Docker, follow the instructions on the <a href=\"https://docs.docker.com/get-docker/\" target=\"_new\">official Docker website</a>. Choose the instructions that correspond to your operating system.</p>\n<p>If you use Linux, a simple command is enough</p>\n<pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">curl</span> -fsSL https://get.docker.com | sudo sh</code></pre>\n<h2>Step 2: Setting Up Cosmos Server</h2>\n<p>Once you have Docker installed, you can set up the Cosmos Server. To do this, you'll need to run a Docker command that pulls the Cosmos Server image from the Docker Hub and starts a new container.</p>\n<p>The command you need to run can be found in the documentation: <a href=\"https://cosmos-cloud.io/doc/1%20index/\">https://cosmos-cloud.io/doc/1%20index/</a></p>\n<p>It is typically starting with <code>docker run...</code></p>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">At the time of writting, the command is</span></p>\n<pre><code class=\"hljs javascript\">docker run -d -p <span class=\"hljs-number\">80</span>:<span class=\"hljs-number\">80</span> -p <span class=\"hljs-number\">443</span>:<span class=\"hljs-number\">443</span> --privileged --name cosmos-server -h cosmos-server --restart=always -v /<span class=\"hljs-keyword\">var</span>/run/docker.sock:<span class=\"hljs-regexp\">/var/</span>run/docker.sock -v /:<span class=\"hljs-regexp\">/mnt/</span>host -v /<span class=\"hljs-keyword\">var</span>/lib/cosmos:<span class=\"hljs-regexp\">/config azukaar/</span>cosmos-server:latest</code></pre>\n<p>Let's break it down:</p>\n<p><code class=\"hljs javascript\">docker run</code> means we are about to run a new docker container (virtual machine)</p>\n<p><code>-d</code> means we are detached (ex. run in the background)</p>\n<p><code>-p 80:80 -p 443:443</code> Exposes ports 80 (for http) and 443 (for https). You can change this, but keep in mind it will break Let's Encrypt (automatic HTTPS certificates, see later for details)</p>\n<p>--privileged is an optional parameter to prevent clashes with SELinux an similar tools</p>\n<p><code>-h Cosmos-Server</code> sets the hostname of the container, it is recommended not to change it. It must be the same as --name</p>\n<p><code>--restart=always</code> means Cosmos will restart if it crashes or if the server restarts</p>\n<p><code class=\"hljs javascript\">-v /<span class=\"hljs-keyword\">var</span>/run/docker.sock:<span class=\"hljs-regexp\">/var/</span>run/docker.sock</code> Gives Cosmos the right to manage your other Docker containers</p>\n<p><code class=\"hljs javascript\">-v /:<span class=\"hljs-regexp\">/mnt/</span>host</code> Gives cosmos the right to see/edit your server files. It is required so you can manage your directories from Cosmos</p>\n<p><code class=\"hljs javascript\">-v /<span class=\"hljs-keyword\">var</span>/lib/cosmos:<span class=\"hljs-regexp\">/config</span></code> This is where Docker will save Cosmos' config files in your server</p>\n<p><code class=\"hljs javascript\"><span class=\"hljs-regexp\">azukaar/</span>cosmos-server:latest</code> the image to be used. It is a Debian based virtual machine with Cosmos up and running already</p>\n<h2>Step 3: Accessing Cosmos Cloud</h2>\n<p>After setting up the Cosmos Server, you can access Cosmos Cloud by opening a web browser and navigating to your server's IP address. This will bring you to the Cosmos Cloud interface, where you can start the graphical installer.</p>\n<p>If youhave attempted to install Cosmos before, the \"clean install\" button will make sure that you are starting from a clean slate, and that no older config will get in the way.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/1-4.png\" alt=\"\" width=\"1920\" height=\"1080\" sizes=\"100vw\" srcset=\"file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/1-4-xs.png 300w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/1-4-sm.png 480w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/1-4-md.png 768w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/1-4-lg.png 1024w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/1-4-xl.png 1360w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/1-4-2xl.png 1600w\"></figure>\n<p>Once ready, press next and the next screen is very straightforward, it wil simply ask you to check that Cosmos can access Docker. If it's not the case, make sure Docker is properly installed and that nothing prevents the access (ex. any hardening software like SELinux).</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/2.png\" alt=\"\" width=\"1920\" height=\"1080\" sizes=\"100vw\" srcset=\"file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/2-xs.png 300w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/2-sm.png 480w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/2-md.png 768w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/2-lg.png 1024w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/2-xl.png 1360w ,file:///C:/Users/azuka/Documents/Publii/sites/cosmos-cloud/preview/media/posts/4/responsive/2-2xl.png 1600w\"></figure>\n<h2>Step 4: The Database</h2>\n<p>In this step, you'll create a database for Cosmos Cloud. This is where all your server's data will be stored.</p>\n<p> </p>\n<h2>Step 5: Configuring Your Domain Name</h2>\n<p> </p>\n<ol>\n<li>\n<p><strong>Domain + HTTPS:</strong> Here, you'll set up your domain name and HTTPS. This involves configuring your DNS settings and setting up a certificate from Let's Encrypt, a free, automated, and open certificate authority. Let's Encrypt allows you to secure your domain with HTTPS, which encrypts the data sent between your server and its users. However, it's important to note that Let's Encrypt certificates need to be renewed every 90 days. Cosmos Cloud automates this process for you, but you'll need to make sure your domain is always pointing to your server's IP address. Using a domain name instead of an IP address is better because it's easier to remember and it allows you to use HTTPS.</p>\n</li>\n</ol>\n<p>After running the graphical installer, you'll need to configure your domain name. This is the address that you'll use to access your server from the internet.</p>\n<p>In your DNS settings, create a new A record that points to your server's IP address. The exact steps for this will depend on your DNS provider.</p>\n<p>![Screenshot: DNS Settings]</p>\n<h2>Step 6: Exploring Cosmos Cloud</h2>\n<p>Now that you've set up Cosmos Cloud and configured your domain name, you can start exploring its features. Here are a few things you can do:</p>\n<ul>\n<li>\n<p><strong>Manage Docker Containers:</strong> Cosmos Cloud provides a simple interface for managing your Docker containers. You can start, stop, and restart containers, as well as view their logs and settings.</p>\n</li>\n<li>\n<p><strong>Install Applications:</strong> With the Cosmos Market, you can easily install a variety of applications on your server. Just choose an application, click the install button, and Cosmos Cloud will take care of the rest.</p>\n</li>\n<li>\n<p><strong>Set Up URLs:</strong> Cosmos Cloud includes a built-in reverse proxy that allows you to set up URLs for your applications. This means you can access your applications from the internet without having to open ports on your router.</p>\n</li>\n<li>\n<p><strong>Manage Users:</strong> You can create and manage users in Cosmos Cloud, allowing you to control who has access to your server and what they can do. For added security, you can enable two-factor authentication (2FA) for user accounts.</p>\n</li>\n</ul>\n<p>![Screenshot: Cosmos Cloud Features]</p>\n<h2>Conclusion</h2>\n<p>Setting up your own server might seem complicated, but with Cosmos Cloud, it doesn't have to be. Even if you're new to Docker and self-hosting, you can get your server up and running in no time. So why wait? Start exploring the world of self-hosting with Cosmos Cloud today!</p>\n<p>![Screenshot: Cosmos Cloud Logo]</p>",
            "image": "file:///C:\Users\azuka\Documents\Publii\sites\cosmos-cloud\preview/media/posts/4/Untitled-1.jpg",
            "author": {
                "name": "Yann Stepienik"
            },
            "tags": [
                   "Tutorial"
            ],
            "date_published": "2023-07-15T18:22:41+01:00",
            "date_modified": "2023-07-16T15:25:00+01:00"
        }
    ]
}
